Project Requirements
1. User Interface (UI):
Create a command-line interface (CLI) for the To-Do List Application.
Display a welcoming message and a menu with the following options:
        Welcome to the To-Do List App!

        Menu:
        1. Add a task
        2. View tasks
        3. Mark a task as complete
        4. Delete a task
        5. Quit

2. To-Do List Features:
Implement the following features for the To-Do List:
Adding a task with a title (by default “Incomplete”).
Viewing the list of tasks with their titles and statuses 
(e.g., "Incomplete" or "Complete").
Marking a task as complete.
Deleting a task.
Quitting the application.

3. User Interaction:
Allow users to interact with the application by selecting menu options 
using input().
Implement input validation to handle unexpected user input gracefully.

4. Error Handling:
Implement error handling using try, except, else, and finally 
blocks to handle potential issues.

5. Code Organization:
Organize your code into functions to promote modularity and readability.
Use meaningful function names with appropriate comments and 
docstrings for clarity.

6. Testing and Debugging:
Thoroughly test your application to identify and fix any bugs.
Consider edge cases, such as empty task lists or incorrect user input.

7. Documentation:
Include a README file that explains how to run the application 
and provides a brief overview of its features.

8. Optional Features (Bonus):
If you feel adventurous, you can add extra features like 
task priorities, due dates, or color-coding tasks based on their status.

9. GitHub Repository:
Create a GitHub repository for your project.
Commit your code to the repository regularly.
Include a link to your GitHub repository in your project documentation.